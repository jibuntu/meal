// create_price_dataの結果をテストする
const log = console.log

const fs = require("fs")


let name_obj = {
  "（キャベツ類）　キャベツ　結球葉　生": "キャベツ",
  "ほうれんそう　葉　夏採り　生": "ほうれんそう",
  "ほうれんそう　葉　冬採り　生": "ほうれんそう",
  "はくさい　結球葉　生": "はくさい",
  "（ねぎ類）　根深ねぎ　葉　軟白　生": "ねぎ",
  "（レタス類）　レタス　土耕栽培　結球葉　生": "レタス",
  "ブロッコリー　花序　生": "ブロッコリー",
  "（もやし類）　だいずもやし　生": "もやし",
  "（もやし類）　りょくとうもやし　生": "もやし",
  "＜いも類＞（さつまいも類）さつまいも　塊根　皮むき　生": "かんしょ",
  "＜いも類＞（さつまいも類）さつまいも　塊根　皮つき　生": "かんしょ",
  "＜いも類＞（さといも類）　さといも　球茎　生": "さといも",
  "（だいこん類）　だいこん　根　皮つき　生": "だいこん",
  "（だいこん類）　だいこん　根　皮むき　生": "だいこん",
  "（にんじん類）　にんじん　根　皮つき　生": "にんじん",
  "（にんじん類）　にんじん　根　皮むき　生": "にんじん",
  "ごぼう　根　生": "ごぼう",
  "（たまねぎ類）　たまねぎ　りん茎　生": "たまねぎ",
  "れんこん　根茎　生": "れんこん",
  "たけのこ　若茎　生": "たけのこ",
  "（かぼちゃ類）　西洋かぼちゃ　果実　生": "かぼちゃ",
  "きゅうり　果実　生": "きゅうり",
  "（なす類）　なす　果実　生": "なす",
  "（トマト類）　トマト　果実　生": "トマト",
  "（トマト類）　ミニトマト　果実　生": "トマト",
  "（ピーマン類）　青ピーマン　果実　生": "ピーマン",
  "（ピーマン類）　赤ピーマン　果実　生": "ピーマン",
  "（ピーマン類）　黄ピーマン　果実　生": "ピーマン",
  "しいたけ　生しいたけ　菌床栽培　生": "生しいたけ",
  "（しめじ類）　ぶなしめじ　生": "しめじ",
  "えのきたけ　生": "えのきたけ",
  "こめ　［水稲穀粒］　精白米　うるち米": "米類",
  "こむぎ　［パン類］　食パン": "食パン",
  "こむぎ　［小麦粉］　薄力粉　2等": "小麦粉",
  "こむぎ　［小麦粉］　中力粉　2等": "小麦粉",
  "こむぎ　［小麦粉］　強力粉　2等": "小麦粉",
  "＜魚類＞（まぐろ類）　びんなが　生": "まぐろ",
  "＜魚類＞（まぐろ類）　めばち　生": "まぐろ",
  "＜魚類＞（あじ類）　まあじ　皮つき、生": "あじ",
  "＜魚類＞（いわし類）　まいわし　生": "いわし",
  "＜魚類＞（かつお類）　かつお　春獲り　生": "かつお",
  "＜魚類＞（かつお類）　かつお　秋獲り　生": "かつお",
  "＜魚類＞（かれい類）　まがれい　生": "かれい",
  "＜魚類＞（さけ・ます類）　べにざけ　生": "さけ",
  "＜魚類＞（さば類）　まさば　生": "さば",
  "＜魚類＞さんま　皮つき、生": "さんま",
  "＜魚類＞（たい類）　まだい　養殖　皮つき　生": "たい",
  "＜魚類＞ぶり　成魚　生": "ぶり",
  "＜いか・たこ類＞（いか類）　するめいか　生": "いか",
  "＜いか・たこ類＞（たこ類）　まだこ　生": "たこ",
  "＜えび・かに類＞（えび類）　くるまえび　養殖　生": "えび",
  "＜えび・かに類＞（かに類）　毛がに　生": "かに",
  "＜貝類＞あさり　生": "あさり",
  "＜貝類＞しじみ　生": "しじみ",
  "＜貝類＞かき　養殖　生": "かき",
  "＜貝類＞ほたてがい　生": "ほたて貝",
  "＜魚類＞（たら類）　すけとうだら　たらこ　生": "たらこ",
  "＜魚類＞（いわし類）　しらす干し　微乾燥品": "しらす干し",
  "＜魚類＞（いわし類）　しらす干し　半乾燥品": "しらす干し",
  "＜魚類＞（あじ類）　まあじ　開き干し　生": "干しあじ",
}

let food_names_json = fs.readFileSync("prices.json", "utf8")
let prices = JSON.parse(food_names_json)

let foods = prices.foods.filter(food => food[2] != "-")


for(name of Object.keys(name_obj)){
  let is_break = false
  for(food of foods){
    let foodName = food[1];
    if(foodName == name){
      is_break = true
      break
    }
  }

  if(is_break == false){
    log("「" + name + "」の価格が設定されていません")
  }
}

log("foods.length: ", foods.length)
log("Object.keys(name_obj).length: ", Object.keys(name_obj).length)
log(foods.length === Object.keys(name_obj).length)